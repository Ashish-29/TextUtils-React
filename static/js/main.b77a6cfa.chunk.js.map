{"version":3,"sources":["Components/Navbar.js","Components/Alert.js","Components/TextForm.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlFor","defaultProps","Alert","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","About","aria-labelledby","data-bs-parent","border","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","body","Components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b77a6cfa.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        \r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">     \r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">         \r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>   \r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n            </li>         \r\n          </ul>\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'?'Enable':'Disable'} dark mode</label>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    aboutText : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set title here',\r\n    aboutText : 'About',\r\n    mode : 'light'\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    \r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUPclick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase.\",\"success\");\r\n    }\r\n    const handleLoclick = ()=> {\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Converted to lowercase.\",\"success\");\r\n    }\r\n    const handleclearclick = ()=> {\r\n        setText('');\r\n        props.showAlert(\"Text Cleared.\",\"success\");\r\n    }\r\n    const handlecopy = ()=> {\r\n        let newText= document.getElementById(\"mybox\");\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n        props.showAlert(\"Copied to clipboard.\",\"success\");\r\n    }\r\n    const handlExtraSpaces = ()=> {\r\n        let newText= text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces removed.\",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"mb-3 my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n            <label htmlFor=\"mybox\" className=\"form-label\"><h1>{props.heading}</h1></label>\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{color: props.mode==='light'?'black':'white', backgroundColor : props.mode==='dark'?'#445e54':'white'}} id=\"mybox\" rows=\"5\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUPclick} >UPPERCASE</button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoclick} >lowercase</button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleclearclick} >Clear</button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handlecopy} >Copy</button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handlExtraSpaces} >Remove Extra Spaces</button>\r\n        \r\n        <div className=\"container my-5\" style={{color: props.mode==='light'?'black':'white'}}>\r\n            <h3>Your text summary</h3>\r\n            <p>{text.split(\" \").length} words and {text.length} characters.</p>\r\n            <p>Approx {0.008 * text.split(\" \").length} minutes read.</p>\r\n        \r\n            <h3>Preview</h3>\r\n            <p>{text.length>0?text:'Enter something in the textbox above to preview it here.'}</p>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n  return (\r\n    <div className='container my-5' style={{backgroundColor:props.mode==='light'?'white':'#383736',color:props.mode==='light'?'black':'white'}}>\r\n        <h2>About US</h2>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\" style={{backgroundColor:props.mode==='light'?'white':'#383736',color:props.mode==='light'?'black':'white'}}>\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    Accordion Item #1\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={{border:'2px solid white'}}>\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={{backgroundColor:props.mode==='light'?'white':'#383736',color:props.mode==='light'?'black':'white'}}>\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    Accordion Item #2\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={{border:'2px solid white'}}>\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={{backgroundColor:props.mode==='light'?'white':'#383736',color:props.mode==='light'?'black':'white'}}>\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    Accordion Item #3\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={{border:'2px solid white'}}>\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport Navbar from './Components/Navbar';\nimport Alert from './Components/Alert';\nimport TextForm from './Components/TextForm';\nimport About from './Components/About';\n\nfunction App() {\n  const [mode,setMode] = useState('light');\n  const [alert,setAlert] = useState(null);\n\n  const toggleMode = () => {\n    if(mode==='light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#383736';\n      showAlert(\"Dark mode has been enabled.\",\"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled.\",\"success\");\n    }\n  }\n\n  const showAlert = (message,type) => {\n    setAlert({\n      msg: message,\n      type:type\n    })\n    setTimeout(()=>{setAlert(null);},1500);\n  }\n\n  return (\n    <>\n      <Navbar title=\"Text_Utils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <TextForm heading='Enter text to analyze below' mode={mode} showAlert={showAlert}/>\n      <About mode={mode} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}